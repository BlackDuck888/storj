pipeline {
    agent {
        dockerfile {
            filename 'Dockerfile.jenkins'
            args '-u root:root --cap-add SYS_PTRACE -v "/tmp/gomod":/go/pkg/mod -v "/tmp/npm":/tmp/npm'
            label 'main'
        }
    }
    options {
          timeout(time: 26, unit: 'MINUTES')
    }
    environment {
        NPM_CONFIG_CACHE = '/tmp/npm/cache'
    }
    stages {
        stage('Build') {
            steps {
                checkout scm

                sh 'mkdir -p .build'

                // make a backup of the mod file in case, for later linting
                sh 'cp go.mod .build/go.mod.orig'
                // download dependencies
                sh 'go mod download'

                sh 'make -j3 build-packages'
                sh 'make install-sim'

                sh 'service postgresql start'
            }
        }

        stage('Verification') {
            parallel {
                stage('Gomobile') {
                    steps {
                        sh 'export STORJ_NETWORK_HOST4=172.17.0.2'
                        sh 'make test-libuplink-gomobile'
                    }
                }
            }
        }
    }

    post {
        always {
            sh "chmod -R 777 ." // ensure Jenkins agent can delete the working directory
            deleteDir()
        }
    }
}
